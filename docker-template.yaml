apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: mern-template
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: mongodb
  spec:
    tags:
      - name: mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:latest

- kind: Deployment
  apiVersion: apps/v1
  metadata:
    name: mern-client
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: checklist-mern
    template:
      metadata:
        labels:
          app: checklist-mern
      spec:

        containers:
          - name: my-container
            image: docker.io/calbertan/calbertan:latest
            ports:
              - containerPort: 2015
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: mern-client
    namespace: ${NAMESPACE}
    labels: 
      app: ${APP_NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - mern-client
          from:
            kind: ImageStreamTag
            namespace: ${NAMESPACE}
            name: mern-client:latest
      - type: ConfigChange
    replicas: 1
    revisionHistoryLimit: 5
    test: false
    selector:
      app: ${APP_NAME}
      deploymentconfig: mern-client
- kind: StatefulSet
  apiVersion: apps/v1
  metadata:
    name: mongodb-statefulset
    namespace: ${NAMESPACE}
  spec:
    serviceName: mongodb
    replicas: 3
    selector:
      matchLabels:
        app: mongodb
    template:
      metadata:
        labels:
          app: mongodb
      spec:
        containers:
          - name: mongodb
            image: mongodb:4.4
            ports:
              - containerPort: 27017
            env:
              - name: MONGO_INITDB_ROOT_USERNAME
                value: dbuser
              - name: MONGO_INITDB_ROOT_PASSWORD
                value: dbpass
    volumeClaimTemplates:
      - metadata:
          name: mongodb-data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 100Mi

- kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
      name: allow-from-openshift-ingress
      namespace: ${NAMESPACE}
  spec:
    # This policy allows any pod with a route & service combination
    # to accept traffic from the OpenShift router pods.
    ingress:
      - from:
          - namespaceSelector:
              matchLabels:
                network.openshift.io/policy-group: ingress
    podSelector: {}
    policyTypes:
      - Ingress
- kind: NetworkPolicy
  apiVersion: networking.k8s.io/v1
  metadata:
      name: allow-same-namespace
      namespace: ${NAMESPACE}
  spec:
    # Allow all pods within the current namespace to communicate
    # to one another.
    podSelector:
    ingress:
    - from:
      - podSelector: {}      

- kind: Service
  apiVersion: v1
  metadata:
    annotations:
    name: mern-api-service
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
  spec:
    ports:
    - name: 3001-tcp
      protocol: TCP
      port: 3001
      targetPort: 3001
    selector:
      app: ${APP_NAME}
      deploymentconfig: mern-api
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
    name: mern-client-service
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
  spec:
    ports:
    - name: 2015-tcp
      protocol: TCP
      port: 2015
      targetPort: 2015
    selector:
      app: ${APP_NAME}
      deploymentconfig: mern-client
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- kind: Service
  apiVersion: v1
  metadata:
    annotations:
    name: mern-mongo-service
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
  spec:
    ports:
    - name: 27017-tcp
      protocol: TCP
      port: 27017
      targetPort: 27017
    selector:
      app: ${APP_NAME}
      statefulset: mongodb-statefulset
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: mern-api-route
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
    annotations:
      haproxy.router.openshift.io/hsts: 'false'
  spec:
    to:
      kind: Service
      name: mern-api-service
      weight: 100
    port:
      targetPort: 3000-tcp
  wildcardPolicy: none
- kind: Route
  apiVersion: route.openshift.io/v1
  metadata:
    name: mern-client-route
    namespace: ${NAMESPACE}
    labels:
      app: ${APP_NAME}
    annotations:
      haproxy.router.openshift.io/hsts: 'false'
  spec:
    to:
      kind: Service
      name: mern-client-service
      weight: 100
    port:
      targetPort: 3000-tcp
  wildcardPolicy: none

parameters:
- name: APP_NAME
  displayName: app name
  required: true
- name: NAMESPACE
  displayName: namespace
  required: true
- name: GIT_URL
  displayName: Git URL
  value: https://github.com/calbertan/Checklist-Mern
- name: GIT_BRANCH
  displayName: Git branch
  value: main

  # - kind: Deployment
#   apiVersion: apps/v1
#   metadata:
#     name: mern-client
#     namespace: ${NAMESPACE}
#     labels: 
#       app: ${APP_NAME}
#   spec:
#     replicas: 1
#     selector:
#       matchLabels:
#         app: mern-client
#     template:
#       metadata:
#         labels:
#           app: mern-client
#       spec:
#         containers:
#           - name: container-client
#             image: mern-client:latest
#             ports:
#               - containerPort: 2015
# - kind: DeploymentConfig
#   apiVersion: v1
#   metadata:
#     name: mern-client
#     namespace: ${NAMESPACE}
#     labels: 
#       app: ${APP_NAME}
#   spec:
#     strategy:
#       type: Rolling
#       rollingParams:
#         updatePeriodSeconds: 1
#         intervalSeconds: 1
#         timeoutSeconds: 600
#         maxUnavailable: 25%
#         maxSurge: 25%
#       resources: {}
#       activeDeadlineSeconds: 21600
#     triggers:
#       - type: ImageChange
#         imageChangeParams:
#           automatic: true
#           containerNames:
#             - mern-client
#           from:
#             kind: ImageStreamTag
#             namespace: ${NAMESPACE}
#             name: mern-client:latest
#       - type: ConfigChange
#     replicas: 1
#     revisionHistoryLimit: 5
#     test: false
#     selector:
#       app: mern-client
#       deploymentconfig: mern-client
#     template: 
#       metadata:
#         labels:
#           app: mern-client
#           deploymentconfig: mern-client
#       spec:
#         containers:
#           - name: mern-client
#             resources: {}
#             terminationMessagePath: /dev/termination-log
#             terminationMessagePolicy: File
#             imagePullPolicy: Always
#         restartPolicy: Always
#         terminationGracePeriodSeconds: 30
#         dnsPolicy: ClusterFirst
#         securityContext: {}
#         schedulerName: default-scheduler